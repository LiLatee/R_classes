y <- 0.6
class(y)
y <- 0:6
class(y)
y
as.numeric(y)
as.numeric(y)
x <- 11:20
cbind(x, y)
rbind(x, y)
list(1, "a", TRUE, 1+4i)
l <- list(1, "a", TRUE, 1+4i)
l[1]
l[[1]
l[[1]]
l[[1]]
l <- list(f1 = 1, "f2=a", f3=TRUE, f4=1+4i)
l$f1
l
m <- matrix(1:6, 2, 3)
m
m[:, 2]
m[, 2]
m[1:2, 2]
x <- c(1, NA, 3)
x[!(is.na(x))]
x[(is.na(x))]
y <- c(NA, 1, 4)
complete.cases(x, y)
airquality
head(airquality)
dim(airquality)
good <- complete.cases(airquality)
dim(airquality[good, ])
dim(airquality[, good])
?complete.cases
getwd()
setwd("Zadanie Wyklad 3")
getwd()
tab <- read.table("PortretPoznania2002-2014.csv")
tab <- read.csv("PortretPoznania2002-2014.csv")
class(tab)
head(tab)
dim(tab)
head(tab)
?read.csv
csv <- read.csv("PortretPoznania2002-2014.csv")
dim(csv)
class(csv)
head(csv)
?read.csv
?read.table
?read.csv
?read.csv2
?getwd
?read.csv
tab <- read.csv("PortretPoznania2002-2014.csv", header=TRUE)
head(tab)
tab <- read.csv("PortretPoznania2002-2014.csv", header=TRUE, sep=',')
head(tab)
classes <- sapply(tab, class)
classes
?download.file
download.file(url="http://www.cs.put.poznan.pl/alabijak/emd/PortretPoznania2002-2014.csv", destfile = ".")
download.file(url="http://www.cs.put.poznan.pl/alabijak/emd/PortretPoznania2002-2014.csv", destfile = "")
download.file(url="http://www.cs.put.poznan.pl/alabijak/emd/PortretPoznania2002-2014.csv")
download.file(url="http://www.cs.put.poznan.pl/alabijak/emd/PortretPoznania2002-2014.csv", destfile = "D:\Dokumenty\Uczelnia\EMD\Projekty\Zadanie Wyklad 3")
download.file(url="http://www.cs.put.poznan.pl/alabijak/emd/PortretPoznania2002-2014.csv", destfile = "D:/Dokumenty/Uczelnia/EMD/Projekty/Zadanie Wyklad 3")
download.file(url="http://www.cs.put.poznan.pl/alabijak/emd/PortretPoznania2002-2014.csv", destfile = "D:/Dokumenty/Uczelnia/EMD/Projekty/Zadanie Wyklad 3/plik.csv")
colnames(tab)
library(dplyr)
install.package("dplyr")
install.packages("dplyr")
library(dplyr)
chicago <- readRDS("chicago.rds")
head(select(tab, 1:5))
head(select(tab, "X2002":"X2004"))
head(select(tab, -("X2002":"X2004")))
names(tab)
colnames(tab)
air <- airquality
head(air)
air.f <- filter(air, Wind > 14)
air.f
head(select(air.f, 1:5))
head(select(air.f, 1:5, Wind))
head(select(air.f, 1:5, Wind), 10)
head(select(air.f, 1:2, Wind), 10)
head(arrange(chic.f, Wind))
head(arrange(chic.f, Wind))
head(arrange(air.f, Wind))
head(arrange(air.f, desc(Wind)))
air2 <- mutate(air, Moc=factor(1*(Wind>17)), labels=c("jest MOC", "nie ma mocy"))
air2 <- mutate(air, Moc=factor(1*(Wind>17), labels=c("jest MOC", "nie ma mocy")))
air2
air2 <- mutate(air, Moc=factor((Wind>17), labels=c("jest MOC", "nie ma mocy")))
air2
air2 <- mutate(air, Moc=factor((Wind<17), labels=c("jest MOC", "nie ma mocy")))
air2
airG <- group_by(air2, Moc)
airG
summarize(airG)
summarize(airG, Wind=mean(Wind))
chicago
load("chicago")
library(swirl.pl)
install.packages(swirl.pl)
install.packages("swirl.pl")
install_from_swirl("Przetwarzanie_danych")
library(swirl.pl)
library("swirl.pl")
install.packages("devtools")
devtools::install_github("dabrze/swirl")
library(swirl.pl)
devtools::install_github("dabrze/swirl")
setwd("..")
getwd()
devtools::install_github("dabrze/swirl")
getwd()
install.packages("devtools")
devtools::install_github("dabrze/swirl")
getwd()
install.packages("devtools")
devtools::install_github("dabrze/swirl")
library(swirl.pl)
install_from_swirl("Przetwarzanie_danych")
swirl()
lifecycle::last_warnings()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dimf(mydf)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, !time)
select(cran, -time)
select(cran, -(X:size))
-50:20
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package= "swirl")
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size>=100500 & r_os=="linux-gnu")
filter(cran, size>=100500 , r_os=="linux-gnu")
filter(cran, size>100500 & r_os=="linux-gnu")
filter(cran, size>100500 , r_os=="linux-gnu")
filter(cran, r_version!=NA)
filter(cran, !is.na(R.version))
filter(cran, !is.na(r_version))
cran2 <= select(cran, size:ip_id)
cran2 <= select(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, (ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, (r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cra3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20)
mutate(cran3, size_mb=size/2^20, size_gb=mb_size/2^10)
mutate(cran3, size_mb=size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
print("elko")
rep(10)
?rep
rep(1, 10)
rnorm(2)
?rnorm
names(knitr::knit_engines$get())
library(DT)
prettyTable <- function(table_df, round_columns=numeric(), round_digits=2) {
DT::datatable(table_df, style="bootstrap", filter = "top", rownames = FALSE, extensions = "Buttons", options = list(dom = 'Bfrtip', buttons = c('copy', 'csv', 'excel', 'pdf', 'print'))) %>%
formatRound(round_columns, round_digits)
}
prettyTable
prettyTable(cars)
prettyTable(cran3)
cars
prettyTable(cars)
class(cars)
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
head(tb)
ncols(df)
ncols(tb)
cols(tb)
dim(tb)
ncol(tb)
print("Liczba wierszy: ", nrow())
print("Liczba wierszy: ", nrow(tb))
print("Liczba wierszy: ")
print("Liczba wierszy: $nrow(tb)")
print("Liczba wierszy: ${nrow(tb)}")
sprintf("Liczba wierszy: %d", nrow(tb))
is.na(tb)
tb[1]
tb[1, ]
is.na(tb[1, ])
complete.cases(is.na(tb[1, ]))
complete.cases(is.na(tb[164, ]))
complete.cases(is.na(tb[163, ]))
is.na(tb[163, ])
good <- complete.cases(tb)
good
tb[good]
tb[good, ]
good <- complete.cases(tb)
n_of_rows_without_NA <- nrow(tb[good, ])
sprintf("Liczba wierszy bez wartosci NA: %d", n_of_rows_without_NA)
summary(tb)
class(summary(tb))
head(tb)
summary(tb["sex"])
unique(tb["sex"])
table(tb["sex"])
tb
plot( table(tb["sex"]))
library(ggplot2)
ggplot(table(tb["sex"]))
ggplot(tb["sex"])
p <- ggplot(tb["sex"]), aes(x=value)) +
geom_histogram()
p <- ggplot(tb["sex"], aes(x=value)) +
geom_histogram()
p
p <- ggplot(tb["sex"] +
geom_histogram()
p
library(ggplot2)
# Basic barplot
p<-ggplot(data=df, aes(x=dose, y=len)) +
geom_bar(stat="identity")
p
# Horizontal bar plot
p + coord_flip()
tb["sex"]
table(tb["sex"])
table(tb["sex"])['female']
table(tb["sex"])[1]
table(tb["sex"])[1, ]
table(tb["sex"])
class(table(tb["sex"]))
table(tb["sex"])[1,1]
summaryble(tb["sex"])
summary(tb["sex"])
data.frame(tb["sex"])
head(df)
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
head(df)
class(df)
tab <- table(tb["sex"])
as.data.frae.matrix(tab)
as.data.frame.matrix(tab)
data.frame(rbind(tab))
df2 <- data.frame(rbind(tab))
df2
df2 <- data.frame(cbind(tab))
df2
ggplot(data=tb["sex"], aes(x=tab, y=female)) +
geom_bar(stat="identity")
ggplot(data=tb["sex"], aes(x=tab)) +
geom_bar(stat="identity")
df
df2 <- data.frame(rbind(tab))
df2
ggplot(data=df2, aes(x=female, y=male)) +
geom_bar(stat="identity")
?ggplot
ggplot(data=df2, aes(x=["a", "b"], y=[100,200])) +
geom_bar(stat="identity")
ggplot(data=df2, aes(x=c("a", "b"), y=c(100,200)) +
geom_bar(stat="identity")
;
ggplot(data=df2, aes(x=c("a", "b"), y=c(100,200))
;
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
head(df)
ggplot(data=df, aes(x=dose, y=len)) +
geom_bar(stat="identity")
?aes
?data.frame
x <- data.frame(female=1800, male=1800)
x
x <- data.frame(gender=c("female", "male"), number=c(1800, 1700))
x
ggplot(x)
ggplot(x, aes(x=gender, y=number))
ggplot(x, aes(x=gender, y=number)) + geom_bar(stat="identity")
head(tb)
tb["Sex"]
tb["sex"]
table(tb["sex"])
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
# Basic barplot
sex_number_table <- table(tb["sex"])
sex_number_df <- data.frame(sex=c("female", "male"), number=c(sex_number_table["female"], sex_number_table["male"]))
bar_plot<-ggplot(data=sex_number_df, aes(x=sex, y=number)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=number), vjust=-0.3, size=3.5)
bar_plot
library(ggplot2)
# Basic barplot
sex_number_table <- table(tb["sex"])
sex_number_df <- data.frame(sex=c("female", "male"), number=c(sex_number_table["female"], sex_number_table["male"]))
bar_plot<-ggplot(data=sex_number_df, aes(x=sex, y=number)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=number), vjust=-0.3, size=3.5)
bar_plot
# Nazwa bloku
library(DT)
prettyTable <- function(table_df,
round_columns=numeric(),
round_digits=2) {
DT::datatable(table_df, style="bootstrap", filter = "top", rownames = FALSE, extensions = "Buttons", options = list(dom = 'Bfrtip', buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
#%>%
# formatRound(round_columns, round_digits)
}
prettyTable(cars)
library(dplyr)
gp <- group_by(tb, year)
summarize(gp, suma=sum(as.logical(sex)))
as.logical("a")
as.logical("year")
summarize(gp, suma=count(sex))
count(c(1,2,3))
?count
count(tb)
count(tb['year'])
summarize(gp, suma=count())
summarize(gp, suma=count("year"))
summarize(gp, suma=count(year))
tb2 <- mutate(tb, sum=adult+child+eldery)
tb2 <- mutate(tb, sum=adult+child+elderly)
tb2
group_by(tb2, female) %>% summarize(sum=sum(sum()))
group_by(tb2, sex) %>% summarize(sum=sum(sum()))
group_by(tb2, sex) %>% summarize(sum=sum(sum))
group_by(tb2, sex) %>% summarize(sum=sum(sum, na.rm = TRUE))
x <- group_by(tb2, sex) %>% summarize(sum=sum(sum, na.rm = TRUE))
class(x)
tb <- mutate(tb, sum=adult+child+elderly)
library(ggplot2)
sex_number_df = group_by(tb2, sex) %>% summarize(sum=sum(sum, na.rm = TRUE))
bar_plot<-ggplot(data=sex_number_df, aes(x=sex, y=sum)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=number), vjust=-0.3, size=3.5)
bar_plot
# Nazwa bloku
library(DT)
prettyTable <- function(table_df,
round_columns=numeric(),
round_digits=2) {
DT::datatable(table_df, style="bootstrap", filter = "top", rownames = FALSE, extensions = "Buttons", options = list(dom = 'Bfrtip', buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
#%>%
# formatRound(round_columns, round_digits)
}
prettyTable(cars)
# Nazwa bloku
library(DT)
prettyTable <- function(table_df,
round_columns=numeric(),
round_digits=2) {
DT::datatable(table_df, style="bootstrap", filter = "top", rownames = FALSE, extensions = "Buttons", options = list(dom = 'Bfrtip', buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
#%>%
# formatRound(round_columns, round_digits)
}
prettyTable(cars)
# Nazwa bloku
library(DT)
prettyTable <- function(table_df,
round_columns=numeric(),
round_digits=2) {
DT::datatable(table_df, style="bootstrap", filter = "top", rownames = FALSE, extensions = "Buttons", options = list(dom = 'Bfrtip', buttons = c('copy', 'csv', 'excel', 'pdf', 'print')))
#%>%
# formatRound(round_columns, round_digits)
}
prettyTable(cars)
tb2
tbt <- group_by(tb2, year) %>% summarize(sum_child=sum(child))
tbt
tbt <- group_by(tb2, year) %>% summarize(sum_child=sum(child, na.rm = TRUE))
tbt
tbt <- group_by(tb2, year) %>% summarize(sum_child=sum(child, na.rm = TRUE), sum_adult=sum(adult, na.rm = TRUE), sum_elderly=sum(elderly, na.rm = TRUE))
tbt
ggplot(data = tbt, aes(x = year, y = sum_child))+
geom_line()
ggplot(data = tbt, aes(x = year))+
geom_line(aes=(y=sum_child), color="red") +
geom_line(aes=(y=sum_adult), color="blue") +
geom_line(aes=(y=sum_elderly), color="orange") +
.
ggplot(data = tbt, aes(x = year))+
geom_line(aes=(y=sum_child), color="red") +
geom_line(aes=(y=sum_adult), color="blue") +
geom_line(aes=(y=sum_elderly), color="orange")
tbt
ggplot(data = tbt, aes(x = year)) +
geom_line(aes=(y=sum_adult), color="blue") +
geom_line(aes=(y=sum_elderly), color="orange") +
ggplot(data = tbt, aes(x = year)) +
geom_line(aes=(y=sum_adult), color="blue") +
geom_line(aes=(y=sum_elderly), color="orange")
ggplot(data = tbt, aes(x = year))+
geom_line(aes(y=sum_child), color="red") +
geom_line(aes(y=sum_adult), color="blue") +
geom_line(aes(y=sum_elderly), color="orange")
plot(pressure)
